// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cusum
arma::cube cusum(arma::mat X, arma::vec gamma);
RcppExport SEXP _DMS_cusum(SEXP XSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(cusum(X, gamma));
    return rcpp_result_gen;
END_RCPP
}
// cusum_2sample_boots
arma::mat cusum_2sample_boots(arma::vec X, arma::mat e);
RcppExport SEXP _DMS_cusum_2sample_boots(SEXP XSEXP, SEXP eSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e(eSEXP);
    rcpp_result_gen = Rcpp::wrap(cusum_2sample_boots(X, e));
    return rcpp_result_gen;
END_RCPP
}
// cal_YC21
arma::rowvec cal_YC21(arma::mat X, arma::mat e, int n_boundary);
RcppExport SEXP _DMS_cal_YC21(SEXP XSEXP, SEXP eSEXP, SEXP n_boundarySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e(eSEXP);
    Rcpp::traits::input_parameter< int >::type n_boundary(n_boundarySEXP);
    rcpp_result_gen = Rcpp::wrap(cal_YC21(X, e, n_boundary));
    return rcpp_result_gen;
END_RCPP
}
// est_var_diff
List est_var_diff(arma::mat X);
RcppExport SEXP _DMS_est_var_diff(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(est_var_diff(X));
    return rcpp_result_gen;
END_RCPP
}
// cal_WZWY19
List cal_WZWY19(arma::mat X);
RcppExport SEXP _DMS_cal_WZWY19(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_WZWY19(X));
    return rcpp_result_gen;
END_RCPP
}
// norm_s0_p
List norm_s0_p(arma::mat C, int n_boundary, int s0, arma::vec p);
RcppExport SEXP _DMS_norm_s0_p(SEXP CSEXP, SEXP n_boundarySEXP, SEXP s0SEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< int >::type n_boundary(n_boundarySEXP);
    Rcpp::traits::input_parameter< int >::type s0(s0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(norm_s0_p(C, n_boundary, s0, p));
    return rcpp_result_gen;
END_RCPP
}
// cal_LZZL20
arma::mat cal_LZZL20(arma::mat X, arma::mat e, int n_boundary, int s0, arma::vec p, arma::mat sig);
RcppExport SEXP _DMS_cal_LZZL20(SEXP XSEXP, SEXP eSEXP, SEXP n_boundarySEXP, SEXP s0SEXP, SEXP pSEXP, SEXP sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e(eSEXP);
    Rcpp::traits::input_parameter< int >::type n_boundary(n_boundarySEXP);
    Rcpp::traits::input_parameter< int >::type s0(s0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sig(sigSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_LZZL20(X, e, n_boundary, s0, p, sig));
    return rcpp_result_gen;
END_RCPP
}
// cal_ZWS22
List cal_ZWS22(arma::mat X, int q, int truc);
RcppExport SEXP _DMS_cal_ZWS22(SEXP XSEXP, SEXP qSEXP, SEXP trucSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type truc(trucSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_ZWS22(X, q, truc));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DMS_cusum", (DL_FUNC) &_DMS_cusum, 2},
    {"_DMS_cusum_2sample_boots", (DL_FUNC) &_DMS_cusum_2sample_boots, 2},
    {"_DMS_cal_YC21", (DL_FUNC) &_DMS_cal_YC21, 3},
    {"_DMS_est_var_diff", (DL_FUNC) &_DMS_est_var_diff, 1},
    {"_DMS_cal_WZWY19", (DL_FUNC) &_DMS_cal_WZWY19, 1},
    {"_DMS_norm_s0_p", (DL_FUNC) &_DMS_norm_s0_p, 4},
    {"_DMS_cal_LZZL20", (DL_FUNC) &_DMS_cal_LZZL20, 6},
    {"_DMS_cal_ZWS22", (DL_FUNC) &_DMS_cal_ZWS22, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_DMS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
